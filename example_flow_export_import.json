[
    {
        "id": "729bb0ac.7a14a",
        "type": "subflow",
        "name": "Flow to GitHub",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "408be944.f061c8"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "owner",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Owner"
                    }
                }
            },
            {
                "name": "repo",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Repo"
                    }
                }
            },
            {
                "name": "path_abs_file",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Path abs File"
                    }
                }
            },
            {
                "name": "flow_name",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Flow Name"
                    }
                }
            },
            {
                "name": "commit",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Commit"
                    }
                }
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "ab50264c.6e1c08",
        "type": "http request",
        "z": "729bb0ac.7a14a",
        "name": "get list Flows",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://{{user_nr}}:{{password_nr}}@localhost:1880/flows",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 310,
        "y": 180,
        "wires": [
            [
                "1ffc7c81.a29383"
            ]
        ]
    },
    {
        "id": "1ffc7c81.a29383",
        "type": "function",
        "z": "729bb0ac.7a14a",
        "name": "search ID of Flow",
        "func": "msg.id_flow = 'global' ;\n\nmsg.payload.forEach( (f) => {\n    // label => Flow else msg.id_flow = global (subflow)\n    if(f.label===msg.flow_name ){\n        msg.id_flow = f.id;\n    }\n});\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 180,
        "wires": [
            [
                "9785d63a.081b98"
            ]
        ]
    },
    {
        "id": "9785d63a.081b98",
        "type": "switch",
        "z": "729bb0ac.7a14a",
        "name": "If id_flow exist",
        "property": "id_flow",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 720,
        "y": 180,
        "wires": [
            [
                "80f932e1.fcfae"
            ],
            [
                "45f4b435.53a2cc"
            ]
        ]
    },
    {
        "id": "512fcbd.083b934",
        "type": "http request",
        "z": "729bb0ac.7a14a",
        "name": "GitHub : Commit Flow",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.github.com/repos/{{flow_owner}}/{{flow_repo}}/contents/{{flow_file}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 840,
        "y": 680,
        "wires": [
            [
                "9286263c.e17ff8"
            ]
        ]
    },
    {
        "id": "408be944.f061c8",
        "type": "change",
        "z": "729bb0ac.7a14a",
        "name": "Param into msg",
        "rules": [
            {
                "t": "set",
                "p": "flow_name",
                "pt": "msg",
                "to": "flow_name",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "flow_file",
                "pt": "msg",
                "to": "path_abs_file",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "flow_repo",
                "pt": "msg",
                "to": "repo",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "flow_owner",
                "pt": "msg",
                "to": "owner",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "commit",
                "pt": "msg",
                "to": "commit",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 80,
        "wires": [
            [
                "ab50264c.6e1c08"
            ]
        ]
    },
    {
        "id": "80f932e1.fcfae",
        "type": "change",
        "z": "729bb0ac.7a14a",
        "name": "Error",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"Flow \" & $.flow_name & \" not exist !\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 200,
        "wires": [
            [
                "863ba6f6.99cc38"
            ]
        ]
    },
    {
        "id": "294ec987.ad4976",
        "type": "http request",
        "z": "729bb0ac.7a14a",
        "name": "GitHub : Get sha of low_file",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.github.com/repos/{{flow_owner}}/{{flow_repo}}/contents/{{flow_file}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 760,
        "y": 560,
        "wires": [
            [
                "ab48eded.d9429"
            ]
        ]
    },
    {
        "id": "b41d3f05.c51da",
        "type": "change",
        "z": "729bb0ac.7a14a",
        "name": "Param http",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t\"accept\":\"application/vnd.github.v3+json\",\t\"message\":\"Update\",\t\"content\":$base64encode($.payload),\t\"encoding\":\"utf-8\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"User-Agent\":\"\",\"Authorization\":\"token \"&$.token }",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 560,
        "wires": [
            [
                "294ec987.ad4976"
            ]
        ]
    },
    {
        "id": "ab48eded.d9429",
        "type": "change",
        "z": "729bb0ac.7a14a",
        "name": "Set flow_sha",
        "rules": [
            {
                "t": "set",
                "p": "flow_sha",
                "pt": "msg",
                "to": "payload.sha",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 560,
        "wires": [
            [
                "4b843044.03641"
            ]
        ]
    },
    {
        "id": "4076ad5f.e2bef4",
        "type": "http request",
        "z": "729bb0ac.7a14a",
        "name": "get Flow of Id",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://{{user_nr}}:{{password_nr}}@localhost:1880/flow/{{id_flow}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 480,
        "y": 460,
        "wires": [
            [
                "caa3060f.9736d8"
            ]
        ]
    },
    {
        "id": "caa3060f.9736d8",
        "type": "change",
        "z": "729bb0ac.7a14a",
        "name": "Set flow_content base64",
        "rules": [
            {
                "t": "set",
                "p": "flow_content",
                "pt": "msg",
                "to": "$base64encode($.payload)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 460,
        "wires": [
            [
                "b41d3f05.c51da"
            ]
        ]
    },
    {
        "id": "4b843044.03641",
        "type": "function",
        "z": "729bb0ac.7a14a",
        "name": "Param http GitHub Commit",
        "func": "msg.headers = {\n    \"User-Agent\":\"\",\n    \"Authorization\":\"token \" + msg.token\n};\n\nmsg.payload = {\n    \"accept\":\"application/vnd.github.v3+json\",\n    \"message\":msg.commit,\n    \"content\": msg.flow_content,\n    \"encoding\":\"utf-8\"\n} ;\n\nmsg.method = 'PUT' ; \n\nif(msg.flow_sha != undefined ){\n    msg.payload.sha = msg.flow_sha ;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 680,
        "wires": [
            [
                "512fcbd.083b934"
            ]
        ]
    },
    {
        "id": "863ba6f6.99cc38",
        "type": "debug",
        "z": "729bb0ac.7a14a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 420,
        "wires": []
    },
    {
        "id": "45f4b435.53a2cc",
        "type": "switch",
        "z": "729bb0ac.7a14a",
        "name": "If id_flow == global => Subflow",
        "property": "id_flow",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "global",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 340,
        "wires": [
            [
                "a6c31417.226148"
            ],
            [
                "4076ad5f.e2bef4"
            ]
        ]
    },
    {
        "id": "a6c31417.226148",
        "type": "http request",
        "z": "729bb0ac.7a14a",
        "name": "get Flow of global",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://{{user_nr}}:{{password_nr}}@localhost:1880/flow/{{id_flow}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 490,
        "y": 280,
        "wires": [
            [
                "ca0f65e5.0343a8"
            ]
        ]
    },
    {
        "id": "ca0f65e5.0343a8",
        "type": "function",
        "z": "729bb0ac.7a14a",
        "name": "search content of SubFlow",
        "func": "msg.payload.subflows.forEach( (f) => {\n    // name => SubFlow\n    if(f.name===msg.flow_name ){\n        msg.subflow = f;\n    }\n});\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 280,
        "wires": [
            [
                "480c33ac.05a9ac"
            ]
        ]
    },
    {
        "id": "480c33ac.05a9ac",
        "type": "change",
        "z": "729bb0ac.7a14a",
        "name": "Convert payload string",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$string($.subflow)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 360,
        "wires": [
            [
                "caa3060f.9736d8"
            ]
        ]
    },
    {
        "id": "9286263c.e17ff8",
        "type": "debug",
        "z": "729bb0ac.7a14a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 680,
        "wires": []
    },
    {
        "id": "3f067bb0.be5694",
        "type": "subflow",
        "name": "GitHub to Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 140,
                "wires": [
                    {
                        "id": "59900f73.e0b81"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "Url Git",
                "type": "str",
                "value": ""
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "348c014c.f37e1e",
        "type": "function",
        "z": "3f067bb0.be5694",
        "name": "Param http",
        "func": "msg.method = 'POST' ; // add flow if flow_id not exist\nmsg.url = 'http://'+msg.user_nr+':'+msg.password_nr+'@localhost:1880/flow' ;\n\nif(msg.type==='flow' ){\n    if(msg.flow_id != undefined ){\n        msg.method = 'PUT' ;  // update flow  \n        msg.url += '/'+ msg.flow_id ;\n    }\n}else{// update subflow  \n    msg.method = 'PUT' ;  // update flow  \n    msg.url += '/global' ;\n}\n\nmsg.payload = msg.content;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 280,
        "wires": [
            [
                "551a1f75.346cd"
            ]
        ]
    },
    {
        "id": "59900f73.e0b81",
        "type": "change",
        "z": "3f067bb0.be5694",
        "name": "Param into msg",
        "rules": [
            {
                "t": "set",
                "p": "flow_git",
                "pt": "msg",
                "to": "Url Git",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 140,
        "wires": [
            [
                "9d44e71c.3e4198"
            ]
        ]
    },
    {
        "id": "ec64fef6.600af",
        "type": "http request",
        "z": "3f067bb0.be5694",
        "name": "get list Flows",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 190,
        "y": 280,
        "wires": [
            [
                "f5eb4de7.ebba6"
            ]
        ]
    },
    {
        "id": "f5eb4de7.ebba6",
        "type": "function",
        "z": "3f067bb0.be5694",
        "name": "search ID of Flows",
        "func": "msg.flow_id2 = msg.flow_id ;\nmsg.flow_id = undefined ;\n\nif(msg.type==='flow'){\n\n    msg.payload.forEach( (f) => {\n        if(f.label===msg.flow_name){\n            msg.flow_id = f.id;\n        }\n    });\n\n}else{\n    for(let i=0 ; i<msg.payload.subflows.length; i++){\n        const f = msg.payload.subflows[i] ;\n        // name => SubFlow\n        if(f.name===msg.flow_name ){\n            msg.flow_id = 'global';\n            msg.payload.subflows[i] = msg.content ;\n        }\n    }\n    if(msg.flow_id===undefined){\n        msg.payload.subflows.push(msg.content) ;\n    }\n    // il faut renvoyer le global entier modifié\n    msg.content=msg.payload;\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 280,
        "wires": [
            [
                "348c014c.f37e1e"
            ]
        ]
    },
    {
        "id": "551a1f75.346cd",
        "type": "http request",
        "z": "3f067bb0.be5694",
        "name": "Create Or update Flow",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 880,
        "y": 280,
        "wires": [
            [
                "c6626e56.a1fe"
            ]
        ]
    },
    {
        "id": "c6626e56.a1fe",
        "type": "debug",
        "z": "3f067bb0.be5694",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 280,
        "wires": []
    },
    {
        "id": "1dd78489.33628b",
        "type": "http request",
        "z": "3f067bb0.be5694",
        "name": "get Flow of git",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 620,
        "y": 140,
        "wires": [
            [
                "f18ec939.381c68"
            ]
        ]
    },
    {
        "id": "9d44e71c.3e4198",
        "type": "change",
        "z": "3f067bb0.be5694",
        "name": "Url Git",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "flow_git",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 140,
        "wires": [
            [
                "1dd78489.33628b"
            ]
        ]
    },
    {
        "id": "f18ec939.381c68",
        "type": "function",
        "z": "3f067bb0.be5694",
        "name": "params",
        "func": "msg.content = msg.payload;\nmsg.flow_name = msg.content.label ; \n\nmsg.url = 'http://'+msg.user_nr+':'+msg.password_nr+'@localhost:1880/flows' ;\nmsg.type= 'flow';\nif( msg.content.type === 'subflow' ){\n    msg.type='subflow';\n    msg.flow_name = msg.content.name ; \n    msg.url = 'http://'+msg.user_nr+':'+msg.password_nr+'@localhost:1880/flow/global' ;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 140,
        "wires": [
            [
                "ec64fef6.600af"
            ]
        ]
    },
    {
        "id": "840c448.edc4fb8",
        "type": "tab",
        "label": "Example Git node-red",
        "disabled": false,
        "info": ""
    },
    {
        "id": "740b38b3.630f98",
        "type": "inject",
        "z": "840c448.edc4fb8",
        "name": "Manual",
        "props": [
            {
                "p": "token",
                "v": "gfdgfdgdf",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 410,
        "y": 280,
        "wires": [
            [
                "ea5590cd.5ee18"
            ]
        ]
    },
    {
        "id": "ea5590cd.5ee18",
        "type": "credentials",
        "z": "840c448.edc4fb8",
        "name": "Credentials",
        "props": [
            {
                "value": "token",
                "type": "msg"
            },
            {
                "value": "user_nr",
                "type": "msg"
            },
            {
                "value": "password_nr",
                "type": "msg"
            }
        ],
        "x": 610,
        "y": 280,
        "wires": [
            [
                "e00338cb.09e258"
            ]
        ]
    },
    {
        "id": "cb4ae6a5.9df878",
        "type": "inject",
        "z": "840c448.edc4fb8",
        "name": "Manual",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 410,
        "y": 380,
        "wires": [
            [
                "c6a24439.abbb08"
            ]
        ]
    },
    {
        "id": "c6a24439.abbb08",
        "type": "credentials",
        "z": "840c448.edc4fb8",
        "name": "Credentials",
        "props": [
            {
                "value": "user_nr",
                "type": "msg"
            },
            {
                "value": "password_nr",
                "type": "msg"
            }
        ],
        "x": 610,
        "y": 380,
        "wires": [
            [
                "e671c537.a4a3e8"
            ]
        ]
    },
    {
        "id": "e671c537.a4a3e8",
        "type": "subflow:3f067bb0.be5694",
        "z": "840c448.edc4fb8",
        "name": "",
        "env": [
            {
                "name": "Url Git",
                "value": "https://raw.githubusercontent.com/ArminasTV/test/main/flows.json",
                "type": "str"
            },
            {
                "name": "Flow Name",
                "value": "Test",
                "type": "str"
            }
        ],
        "x": 860,
        "y": 380,
        "wires": []
    },
    {
        "id": "e00338cb.09e258",
        "type": "subflow:729bb0ac.7a14a",
        "z": "840c448.edc4fb8",
        "name": "",
        "env": [
            {
                "name": "owner",
                "value": "ArminasTV",
                "type": "str"
            },
            {
                "name": "repo",
                "value": "test",
                "type": "str"
            },
            {
                "name": "path_abs_file",
                "value": "flows.json",
                "type": "str"
            },
            {
                "name": "flow_name",
                "value": "Flow 2",
                "type": "str"
            },
            {
                "name": "commit",
                "value": "Init Flow 2",
                "type": "str"
            },
            {
                "name": "Owner",
                "value": "ArminasTV",
                "type": "str"
            },
            {
                "name": "Repo",
                "value": "test",
                "type": "str"
            },
            {
                "name": "Path abs File",
                "value": "flows.json",
                "type": "str"
            },
            {
                "name": "Flow Name",
                "value": "Get Flow Git",
                "type": "str"
            }
        ],
        "x": 860,
        "y": 280,
        "wires": []
    }
]
