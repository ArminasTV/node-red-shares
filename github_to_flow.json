[
    {
        "id": "3f067bb0.be5694",
        "type": "subflow",
        "name": "GitHub to Flow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 140,
                "wires": [
                    {
                        "id": "59900f73.e0b81"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "Url Git",
                "type": "str",
                "value": ""
            },
            {
                "name": "url_nr",
                "type": "str",
                "value": "localhost:1880",
                "ui": {
                    "label": {
                        "en-US": "Url Node-red"
                    }
                }
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "348c014c.f37e1e",
        "type": "function",
        "z": "3f067bb0.be5694",
        "name": "Param http",
        "func": "msg.method = 'POST' ; // add flow if flow_id not exist\nmsg.headers = {\"Authorization\": \"Basic \" + msg.auth} ;\nmsg.url = 'http://'+msg.url_nr+'/flow' ;\n\nif(msg.type==='flow' ){\n    if(msg.flow_id != undefined ){\n        msg.method = 'PUT' ;  // update flow  \n        msg.url += '/'+ msg.flow_id ;\n    }\n}else{// update subflow  \n    msg.method = 'PUT' ;  // update flow  \n    msg.url += '/global' ;\n}\n\nmsg.payload = msg.content;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 340,
        "wires": [
            [
                "551a1f75.346cd"
            ]
        ]
    },
    {
        "id": "59900f73.e0b81",
        "type": "change",
        "z": "3f067bb0.be5694",
        "name": "Param into msg",
        "rules": [
            {
                "t": "set",
                "p": "flow_git",
                "pt": "msg",
                "to": "Url Git",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "url_nr",
                "pt": "msg",
                "to": "url_nr",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 140,
        "wires": [
            [
                "b288ef9f.a6179"
            ]
        ]
    },
    {
        "id": "ec64fef6.600af",
        "type": "http request",
        "z": "3f067bb0.be5694",
        "name": "get list Flows",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 310,
        "y": 340,
        "wires": [
            [
                "f5eb4de7.ebba6"
            ]
        ]
    },
    {
        "id": "f5eb4de7.ebba6",
        "type": "function",
        "z": "3f067bb0.be5694",
        "name": "search ID of Flows",
        "func": "msg.flow_id2 = msg.flow_id ;\nmsg.flow_id = undefined ;\n\nif(msg.type==='flow'){\n\n    msg.payload.forEach( (f) => {\n        if(f.label===msg.flow_name){\n            msg.flow_id = f.id;\n        }\n    });\n\n}else{\n    for(let i=0 ; i<msg.payload.subflows.length; i++){\n        const f = msg.payload.subflows[i] ;\n        // name => SubFlow\n        if(f.name===msg.flow_name ){\n            msg.flow_id = 'global';\n            msg.payload.subflows[i] = msg.content ;\n        }\n    }\n    if(msg.flow_id===undefined){\n        msg.payload.subflows.push(msg.content) ;\n    }\n    // il faut renvoyer le global entier modifi√©\n    msg.content=msg.payload;\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 340,
        "wires": [
            [
                "348c014c.f37e1e"
            ]
        ]
    },
    {
        "id": "551a1f75.346cd",
        "type": "http request",
        "z": "3f067bb0.be5694",
        "name": "Create Or update Flow",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "c6626e56.a1fe"
            ]
        ]
    },
    {
        "id": "c6626e56.a1fe",
        "type": "debug",
        "z": "3f067bb0.be5694",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 340,
        "wires": []
    },
    {
        "id": "1dd78489.33628b",
        "type": "http request",
        "z": "3f067bb0.be5694",
        "name": "get Flow of git",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 740,
        "y": 200,
        "wires": [
            [
                "f18ec939.381c68"
            ]
        ]
    },
    {
        "id": "9d44e71c.3e4198",
        "type": "change",
        "z": "3f067bb0.be5694",
        "name": "Url Git",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "flow_git",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 200,
        "wires": [
            [
                "1dd78489.33628b"
            ]
        ]
    },
    {
        "id": "f18ec939.381c68",
        "type": "function",
        "z": "3f067bb0.be5694",
        "name": "params",
        "func": "msg.content = msg.payload;\nmsg.flow_name = msg.content.label ; \n\nmsg.url = 'http://'+msg.url_nr+'/flows' ;\nmsg.headers = {\"Authorization\": \"Basic \" + msg.auth} ;\nmsg.type= 'flow';\nif( msg.content.type === 'subflow' ){\n    msg.type='subflow';\n    msg.flow_name = msg.content.name ; \n    msg.url = 'http://'+msg.url_nr+'/flow/global' ;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 200,
        "wires": [
            [
                "ec64fef6.600af"
            ]
        ]
    },
    {
        "id": "b288ef9f.a6179",
        "type": "change",
        "z": "3f067bb0.be5694",
        "name": "Auth base 64",
        "rules": [
            {
                "t": "set",
                "p": "auth",
                "pt": "msg",
                "to": "$base64encode($.user_nr&':'&$.password_nr)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 200,
        "wires": [
            [
                "9d44e71c.3e4198"
            ]
        ]
    }
]
